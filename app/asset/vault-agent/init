#!/bin/bash

logInfo () {
  msg="[VAULT AGENT - init script] $(date '+%Y-%m-%dT%T.%3N') ${1}"
  echo "$msg" | tee -a ${LOG_FILE}
}

logInfo "Starting vault-entrypoint.sh"

createConfigDir(){
  logInfo "Creating config directory"
  mkdir -p /config
}

fillConfigFile(){
  logInfo "Filling config file"

  logInfo "Setting EXIT_AFTER_AUTH"
  if [[ -z "${VAULT_AGENT_EXIT_AFTER_AUTH}" ]]; then
      logInfo "VAULT_AGENT_EXIT_AFTER_AUTH is not set. Setting to true"
      EXIT_AFTER_AUTH="true"
  else
      logInfo "VAULT_AGENT_EXIT_AFTER_AUTH is set to ${VAULT_AGENT_EXIT_AFTER_AUTH}"
      EXIT_AFTER_AUTH=${VAULT_AGENT_EXIT_AFTER_AUTH}
  fi

  logInfo "Setting VAULT_ROLE = ${VAULT_ROLE} in /vault-agent/agent.hcl"
  sed -i "s~VAULT_ROLE~${VAULT_ROLE}~g" /vault-agent/agent.hcl

  logInfo "Setting TARGET_FILE_NAME = ${TARGET_FILE_NAME} in /vault-agent/agent.hcl"
  sed -i "s~TARGET_FILE_NAME~${TARGET_FILE_NAME}~g" /vault-agent/agent.hcl

  logInfo "Setting VAULT_AGENT_EXIT_AFTER_AUTH = ${EXIT_AFTER_AUTH} in /vault-agent/agent.hcl"
  sed -i "s~VAULT_AGENT_EXIT_AFTER_AUTH~${EXIT_AFTER_AUTH}~g" /vault-agent/agent.hcl
}

decodingTemplate(){
  logInfo "Decoding VAULT_AGENT_TEMPLATE and writing to /vault-agent/${TARGET_FILE_NAME}"
  echo ${VAULT_AGENT_TEMPLATE} | base64 -d > /vault-agent/${TARGET_FILE_NAME}
}

logInfo starting vault-entrypoint.sh
createConfigDir
fillConfigFile
decodingTemplate
logInfo "Starting vault agent using /vault-agent/agent.hcl"
vault agent -config /vault-agent/agent.hcl